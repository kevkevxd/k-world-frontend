{"ast":null,"code":"import { useEffect } from \"react\";\nexport default function useEvent(event, handler) {\n  useEffect(() => {\n    // initiate the event handler\n    window.addEventListener(event, handler); // this will clean up the event every time the component is re-rendered\n\n    return function cleanup() {\n      window.removeEventListener(event, handler);\n    };\n  });\n}","map":{"version":3,"sources":["/home/kevinxie/code/k-world/k-world-frontend/k-react/src/hooks/useEvent.js"],"names":["useEffect","useEvent","event","handler","window","addEventListener","cleanup","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,OAAzB,EAAkC;AAC/CH,EAAAA,SAAS,CAAC,MAAM;AACd;AACAI,IAAAA,MAAM,CAACC,gBAAP,CAAwBH,KAAxB,EAA+BC,OAA/B,EAFc,CAId;;AACA,WAAO,SAASG,OAAT,GAAmB;AACxBF,MAAAA,MAAM,CAACG,mBAAP,CAA2BL,KAA3B,EAAkCC,OAAlC;AACD,KAFD;AAGD,GARQ,CAAT;AASD","sourcesContent":["import { useEffect } from \"react\";\n\nexport default function useEvent(event, handler) {\n  useEffect(() => {\n    // initiate the event handler\n    window.addEventListener(event, handler);\n\n    // this will clean up the event every time the component is re-rendered\n    return function cleanup() {\n      window.removeEventListener(event, handler);\n    };\n  });\n}\n"]},"metadata":{},"sourceType":"module"}